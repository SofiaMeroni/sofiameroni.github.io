name: CD Pipeline # Definimos el nombre del workflow

on:
  workflow_run:
    workflows: ["CI Pipeline"] # Se ejecuta cuando el workflow de CI ha terminado
    branches: [main] # Solo en la rama principal
    types:
      - completed # Solo cuando el workflow de CI ha finalizado
  push:
    tags:
      - 'v*' # También se ejecuta si se hace un push con un tag que empiece con "v"

jobs:
  build_and_deploy:
    name: Build and Deploy # Nombre del job
    runs-on: ubuntu-latest # Se ejecuta en la última versión de Ubuntu
    permissions:
      contents: write  # Permiso necesario para hacer push
      pages: write     #  Permiso para GitHub Pages
      id-token: write  #  Para autenticación OIDC y el siguiente if es si solo el CI pasó exitosamente o si es un push con tag
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3 # Descarga el código fuente del repositorio
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.2' # Versión de Ruby a usar
          bundler-cache: false  # Cambiado de true a false desactiva caché para evitar errores de instalación

      - name: Clean Bundler
        run: |
          rm -rf vendor/bundle 
          bundle config set --local path 'vendor/bundle'
# en la linea rm -rf vendor/bundle  borra cualquier instalación previa de Bundler
# Y en la linea  bundle config set --local path 'vendor/bundle' Configura la instalación local de Bundler

      - name: Install Bundler dependencies
        run: |
          bundle install --no-cache --verbose 
# Instala las dependencias sin usar caché

      - name: Check Ruby and Bundler version
        run: |
          ruby -v
          bundler -v
# Muestra la versión de Bundler
      
      - name: Build Jekyll site
        run: |
          bundle exec jekyll build  
# Genera el sitio estático

      - name: Capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: website-build
          path: _site/
# Guarda la carpeta _site como artefacto
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: _site #carpeta que se va a desplegar
          branch: gh-pages #se publica en la rama gh-pages
          clean: true   # Elimina archivos viejos
          token: ${{ secrets.GITHUB_TOKEN }}  #  Asegura autenticación correcta
          force: true  # Forzar push si hay conflictos
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/') 
        uses: softprops/action-gh-release@v1
        with:
          files: |
            _site/**/*
          body: |
            # Release ${{ github.ref_name }}
            
            Automatic release from CD pipeline.
            
            ## What's Changed
            
            ${{ github.event.head_commit.message }}
# if Solo si se hizo push con un tag de versión